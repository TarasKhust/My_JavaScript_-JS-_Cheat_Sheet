1
00:00:00,270 --> 00:00:00,640
All right.

2
00:00:00,690 --> 00:00:01,370
Welcome back.

3
00:00:01,440 --> 00:00:04,370
So our first challenge is to write a push method.

4
00:00:04,500 --> 00:00:07,190
So are doubly linked list class doesn't do anything right now.

5
00:00:07,300 --> 00:00:12,900
Let's add a method called Push that takes a node or takes a value and add a new node to the end of the

6
00:00:12,900 --> 00:00:14,890
doubly linked list.

7
00:00:14,910 --> 00:00:21,210
So if we visualize that here found a push something in at the end I'll do creates and oh no not create

8
00:00:21,290 --> 00:00:24,990
insert after tale is how we specify at the end.

9
00:00:24,990 --> 00:00:33,650
Let's do all that we have to do is find the tail and we make a new node eighty.

10
00:00:33,690 --> 00:00:39,380
We connect the dots next of the tail to our new tail and then we also need to go the other direction

11
00:00:39,690 --> 00:00:43,670
we need to take the new tail and connect it backwards to the old tail.

12
00:00:43,860 --> 00:00:47,690
And then finally we make this the tail we move that over.

13
00:00:47,730 --> 00:00:53,340
So if we wanted to write the pseudo code the steps that we need to follow the first thing is to create

14
00:00:53,340 --> 00:00:58,840
the new node that you're going to add in so create a new node with the value passed in.

15
00:00:59,060 --> 00:01:00,920
We need to check if the head is no.

16
00:01:00,930 --> 00:01:03,390
Or you can also just check if the length is zero.

17
00:01:03,390 --> 00:01:05,200
Basically check if the list is empty.

18
00:01:05,280 --> 00:01:10,680
If it is the head and the tail are both the newly created node and you don't actually have to do anything

19
00:01:10,680 --> 00:01:11,040
else.

20
00:01:11,040 --> 00:01:14,520
If that's the case because there's no previous or next to connect.

21
00:01:14,520 --> 00:01:16,230
We just make the head and the tail the same.

22
00:01:16,230 --> 00:01:19,660
Otherwise if there is something in there already we take the current.

23
00:01:20,130 --> 00:01:27,380
And we set the next property on it to be the new node that we just made but then we also need to take

24
00:01:27,620 --> 00:01:31,690
the previous property of the new node and set it to be the old tail.

25
00:01:31,760 --> 00:01:34,290
So we need to point the arrow backwards.

26
00:01:34,460 --> 00:01:39,650
If this is making the forward arrow the next we need to do the previous from the new node back to the

27
00:01:39,650 --> 00:01:45,980
old tail and then we just need to update the tail property to be the new node that is now at the end

28
00:01:46,490 --> 00:01:54,800
just like we did here where we inserted we step back here we make the new node we connect the old tale

29
00:01:54,830 --> 00:02:01,190
to the new node then we connect the new node to the old tail and then we just say all right this thing

30
00:02:01,190 --> 00:02:04,130
is the tail that's the last step.

31
00:02:04,130 --> 00:02:08,510
And then lastly increment the length and then return the entire list.

32
00:02:08,510 --> 00:02:08,900
All right.

33
00:02:08,900 --> 00:02:10,590
So in the next video we'll have a solution.

